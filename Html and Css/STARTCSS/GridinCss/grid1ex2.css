*{
    margin: 0;
    padding: 0;
    box-sizing: border-box;
}
body{
    height: 100%;
    width: 100%;

}
.container{
    height: 100%;
    width: 100%;
    background-color: rgb(208, 154, 154);
    display: grid;
    gap: 0.2rem;
    grid-template-columns: repeat(3,1fr);
    grid-template-rows: repeat(4,1fr);
    padding: 4rem;
    border: 2px solid white;

    /* justify-items: center; */
    /* align-items: center; */
    place-items: center;
}
.item{
    height: 100px;
    width: 100px;
    background-color: rgb(223, 199, 191);
    border: 5px solid wheat;
    /* justify-self: center;  */
    /* In CSS, the justify-self property is used to align an individual item inside a grid container along the inline (horizontal) axis. It determines how the item is aligned within its grid cell. This property is particularly useful when you're working with CSS Grid layouts.

Here are the possible values for justify-self:

start: Aligns the item at the start of the grid cell (left side in left-to-right languages).
end: Aligns the item at the end of the grid cell (right side in left-to-right languages).
center: Centers the item in the grid cell.
stretch: Stretches the item to fill the grid cell (this is the default behavior).
 */
 /* align-self:end; */

 /* The align-self property in CSS allows you to control the vertical alignment (along the block axis) of an individual item within a flexbox or grid container. While the container's alignment can be set for all items using align-items, the align-self property is used to override that alignment for a specific item.

Values of align-self:
start: Aligns the item at the start of the container's cross axis (top in block-based layouts).
end: Aligns the item at the end of the container's cross axis (bottom in block-based layouts).
center: Centers the item along the container's cross axis.
stretch: Stretches the item to fill the container's cross axis (this is the default for grid items if no height is explicitly set).
baseline: Aligns the item's baseline with the container's baseline (useful for aligning text).
 */
 place-self: center;
}