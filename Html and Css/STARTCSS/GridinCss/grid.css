*{
    margin: 0;
    padding: 0;
    box-sizing: border-box;
}
body{
    height: 100vh;
    width: 100vw;

}
.container{
    height: 100%;
    width: 100%;
    background-color: rgb(59, 57, 57);
    display: grid;
    padding: 4rem;
    row-gap: 1rem;
    column-gap: 1rem;
    /* grid-template-rows: 100px 100px; 
    This property defines the height of the rows in the grid.
In this case, the grid will have two rows, each with a height of 100px. */
    grid-template-rows: 100px 100px; 
    /* grid-template-columns: 100px 100px 100px;

This property defines the width of the columns in the grid.
Here, the grid will have three columns, each with a width of 100px.
 */
    grid-template-columns: 100px 100px 100px;
    /* column-gap: 1rem;

Similar to row-gap, this defines the horizontal spacing (gap) between columns in the grid.
Again, 1rem usually equals 16px, so the columns will be spaced 16px apart.
    column-gap: 1rem; */


    /* In CSS, the fraction unit (denoted as fr) is used in grid layouts to define flexible space within a grid container. It represents a fraction of the available space in the grid container after any other non-flexible sizes (such as fixed pixel values, percentages, etc.) have been allocated.

How fr Works:
Each fr unit distributes the remaining space in proportion to the total number of fr units specified.
If you use only fr units, the available space is divided equally according to the fractions assigned.
 */

 /* grid-template-rows: repeat(4,1fr ); 
 grid-template-columns: 1fr 1fr 1fr; */
 grid-template-columns: repeat(1,1fr);
 grid-template-rows: repeat(6,1fr);

}
.item{
    background-color: rgb(94, 94, 157);
    border: 5px solid black;
    color: white;
    display: flex;
    justify-content: center;
    align-items: center;
    font-size: 2rem;
} 

@media (min-width:760px){
    .container{
        grid-template-rows: repeat(4,1fr ); 
 grid-template-columns: 1fr 1fr 1fr;

    }
    .header, .footer{
        grid-column-start: 1;
        grid-column-end: 4;
    }
    .slidebar{
        grid-row-start: 2;
        grid-row-end: 4;
    }
    .content1{
        grid-column-start: 2;
        grid-column-end: 4;
    }

}